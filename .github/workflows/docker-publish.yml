---
name: Build and Publish Docker Image

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
  push:
    # Ajusta la rama o los paths que quieras vigilar
    branches:
      - main
    paths:
      - 'juego-aviones/**'
      - 'juego-aviones/Dockerfile'
      - '.github/workflows/docker-publish.yml'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read          # para checkout
      packages: write         # para publicar en GHCR
      id-token: write         # si usas OIDC (no necesario en este caso)
    env:
      IMAGE_NAME: poc-game-001   # ← aquí defines el nombre de tu imagen
      IMAGE_VERSION: v0.1.3         # ← aquí defines la versión de tu imagen

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU (para multi-arch, opcional)
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN_PACKAGES }}

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: juego-aviones         # ajusta según tu estructura
          file: juego-aviones/Dockerfile            # o la ruta a tu Dockerfile
          platforms: linux/amd64        # ajusta si necesitas multi-arch
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }}

      - name: Verify published image
        run: |
          echo "Imagen publicada en ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }}"
